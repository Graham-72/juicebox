<?php


/**
 * @file
 * Install, update and uninstall functions for the Juicebox module.
 */


/**
 * Implements hook_requirements().
 */
function juicebox_requirements($phase)
{
  $requirements = array();
  $t = get_t();
  // Check on the installation status of the Juicebox library. Note that
  // we do not do this check during the 'install' phase as the libraries API
  // functions will not always be available then (if installing Backdrop via an
  // install profile, etc.).
  if ($phase == 'runtime') {
    // Get locally installed library details.
    $library = juicebox_library_detect(TRUE, TRUE);
    $requirements['juicebox'] = array(
      'title' => $t('Juicebox Javascript Library'),
    );
    if ($library['installed']) {
      $requirements['juicebox']['value'] = $library['version'];
      $requirements['juicebox']['severity'] = REQUIREMENT_OK;
    } else {
      $requirements['juicebox']['value'] = $library['error'];
      $requirements['juicebox']['description'] = $library['error message'];
      $requirements['juicebox']['severity'] = REQUIREMENT_ERROR;
    }
    // Add notice about incompatibility with devel_themer.
    if (module_exists('devel_themer')) {
      $requirements['juicebox_devel_themer'] = array(
        'title' => 'Juicebox Compatibility',
        'value' => 'Theme Developer module is enabled',
        'description' => t('The Juicebox module is not compatible with the Theme Developer module. Your Juicebox galleries may not display correctly until the Theme Developer module has been disabled.'),
        'severity' => REQUIREMENT_ERROR,
      );
    }
    // Add notice about the fact that all logic from the juicebox_xml_cache
    // module has been added this module.
    if (module_exists('juicebox_xml_cache')) {
      $requirements['juicebox_xml_cache'] = array(
        'title' => 'Juicebox Compatibility',
        'value' => 'Juicebox XML cache module obsolete',
        'description' => t('The Juicebox XML Cache (sandbox) module is now obsolete. That module\'s primary functionality has been added to the main Juicebox module (as of version 7.x-2.1 of Juicebox) and is no longer needed. Please uninstall the Juicebox XML Cache module.'),
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }
  return $requirements;
}

/**
 * Move juicebox settings from variables to config.
 */
function juicebox_update_1000()
{
  // Migrate variables to config.
  $config = config('juicebox.settings');
  $config->set('juicebox_js_scope', update_variable_get('juicebox_js_scope', 'header'));
  $config->set('juicebox_apply_markup_filter', update_variable_get('juicebox_apply_markup_filter', 1));
  $config->set('juicebox_enable_cors', update_variable_get('juicebox_enable_cors', 0));
  $config->set('juicebox_translate_interface', update_variable_get('juicebox_translate_interface', 0));
  $config->set('juicebox_translate_base_languagelist', update_variable_get('juicebox_translate_base_languagelist', ' '));
  $config->set('juicebox_multisize_small', update_variable_get('juicebox_multisize_small', 'juicebox small'));
  $config->set('juicebox_multisize_medium', update_variable_get('juicebox_multisize_medium', 'juicebox_medium'));
  $config->set('juicebox_multisize_large', update_variable_get('juicebox_multisize_large', 'juicebox_large'));
  $config->save();

  // Delete variables.
  update_variable_del('juicebox_js_scope');
  update_variable_del('juicebox_apply_markup_filter');
  update_variable_del('juicebox_enable_cors');
  update_variable_del('juicebox_translate_interface');
  update_variable_del('juicebox_translate_base_languagelist');
  update_variable_del('juicebox_multisize_small');
  update_variable_del('juicebox_multisize_medium');
  update_variable_del('juicebox_multisize_large');
}


/**
 * Implements hook_update_last_removed().
 */
function juicebox_update_last_removed()
{
  return 7201;
}
